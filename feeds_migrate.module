<?php

/**
 * @file
 * feeds_migrate.module
 */

use Drupal\feeds_migrate\Entity\FeedsMigrateImporter;
use Drupal\migrate\Plugin\migrate\destination\EntityContentBase;

/**
 * Implements hook_cron().
 */
function feeds_migrate_cron() {
  $request_time = \Drupal::time()->getRequestTime();
  $queue = \Drupal::queue('feeds_migrate_importer');

  /** @var FeedsMigrateImporter $importer */
  foreach (FeedsMigrateImporter::loadMultiple() as $importer) {
    if ($importer->needsImported() && $queue->createItem($importer->id())) {
      // Add timestamp to avoid queueing item more than once.
      $importer->lastRan = $request_time;
      $importer->save();
    }
  }
}

/**
 * Implements hook_migrate_source_info_alter().
 *
 * Defines form classes for source plugins.
 */
function feeds_migrate_migrate_source_info_alter(array &$plugins) {
  // @todo don't hardcode these, but use a way to dynamically enhance the
  //       plugin definition of "each" data parser plugin with a form.
  $plugins['url']['feeds']['form']['configuration'] = \Drupal\feeds_migrate\Plugin\migrate\source\Form\UrlForm::class;
}

/**
 * Implements hook_migrate_data_fetcher_info_alter().
 *
 * Defines form classes for data fetcher plugins.
 */
function feeds_migrate_data_fetcher_info_alter(array &$plugins) {
  // @todo don't hardcode these, but use a way to dynamically enhance the
  //       plugin definition of "each" data parser plugin with a form.
  $plugins['file']['feeds']['form']['configuration'] = \Drupal\feeds_migrate\Plugin\migrate_plus\data_fetcher\Form\FileForm::class;
}

/**
 * Implements hook_migrate_data_parser_info_alter().
 *
 * Defines form classes for data parser plugins.
 */
function feeds_migrate_data_parser_info_alter(array &$plugins) {
  // @todo don't hardcode these, but use a way to dynamically enhance the
  //       plugin definition of "each" data parser plugin with a form.
  $plugins['json']['feeds']['form']['configuration'] = \Drupal\feeds_migrate\Plugin\migrate_plus\data_parser\Form\JsonForm::class;
}

/**
 * Implements hook_migrate_destination_info_alter().
 *
 * Defines form classes for destination plugins.
 */
function feeds_migrate_migrate_destination_info_alter(array &$plugins) {
  foreach ($plugins as &$plugin) {
    if ($plugin['class'] == EntityContentBase::class || is_subclass_of($plugin['class'], EntityContentBase::class)) {
      // Specify option form class for content entity destinations.
      $plugin['feeds']['form']['option'] = \Drupal\feeds_migrate\Plugin\migrate\destination\Form\EntityContentOptionForm::class;

      // Specify settings form class.
      // @todo yes, specify these!
    }

    // @todo other destination types may also have settings.
  }
}

/**
 * Implements hook_migrate_process_info_alter().
 *
 * Defines form classes for process plugins.
 */
function feeds_migrate_migrate_process_info_alter(array &$plugins) {
  // @todo don't hardcode these, but use a way to dynamically enhance the
  //       plugin definition of "each" process plugin with a form.
  $plugins['default_value']['feeds']['form']['configuration'] = \Drupal\feeds_migrate\Plugin\migrate\process\Form\DefaultValueForm::class;
}
