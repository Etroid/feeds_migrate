image: andrewberry/drupal_tests:0.4.0
services:
  - mariadb:10.3
  - selenium/standalone-chrome-debug:3.7.1-beryllium
variables:
  MYSQL_ALLOW_EMPTY_PASSWORD: "1"

before_script:
  - ln -sf ${CI_PROJECT_DIR} /var/www/html/modules/feeds_migrate

stages:
  - build
  - test

## Build the testing environment.
build:
  stage: build
  script:
    - cd /var/www/html
    - ./update-dependencies.sh feeds_migrate
  except:
    - master
  # Cache libraries in between jobs
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - vendor/

## Job to run tests.
test:tests:
  stage: test
  script:
    - cd /var/www/html
    - ./update-dependencies.sh feeds_migrate
    #- ./test.sh feeds_migrate
    #- ./test-functional.sh feeds_migrate
    #- ./test-functional-js.sh feeds_migrate
    - export selenium_remote_url="http://selenium__standalone-chrome:4444/wd/hub/"
    - apache2-foreground&
    - robo override:phpunit-config feeds_migrate
    - sudo -E -u www-data vendor/bin/phpunit -c core --group feeds_migrate --testsuite functional-javascript --debug --verbose --log-junit artifacts/phpunit/phpunit.xml
  artifacts:
    when: on_failure
    paths:
      - artifacts/phpunit

## Job to check coding standards.
test:code_sniffer:
  stage: test
  script:
    - cd /var/www/html
    - ./update-dependencies.sh feeds_migrate
    # Install dependencies and configure phpcs
    - vendor/bin/phpcs --config-set installed_paths vendor/drupal/coder/coder_sniffer
    # Don't exit builds in CI when warning/error occurs.
    # @todo fix errors so this becomes reliable
    - vendor/bin/phpcs --config-set ignore_warnings_on_exit 1
    - vendor/bin/phpcs --config-set ignore_errors_on_exit 1
    - vendor/bin/phpmd modules/$1/src html cleancode,codesize,design,unusedcode --ignore-violations-on-exit --reportfile artifacts/phpmd/index.html
    - vendor/bin/phpmetrics --extensions=php,inc,module --report-html=artifacts/phpmetrics --git modules/$1
    # Check coding standards
    - vendor/bin/phpcs --standard=Drupal --report=junit --report-junit=artifacts/phpcs/phpcs.xml modules/$1
  artifacts:
    paths:
      - artifacts/phpcs

## Job to check test coverage.
test:code_coverage:
  stage: test
  script:
    - cd /var/www/html
    - ./code-coverage-stats.sh feeds_migrate
  artifacts:
    paths:
      - artifacts
